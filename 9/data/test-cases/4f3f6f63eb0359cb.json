{"uid":"4f3f6f63eb0359cb","name":"test_registration_page","fullName":"vizsgaremek.Vizsgaremek_Python.test_conduit.TestConduit#test_registration_page","historyId":"0653d137c5c41de5b1f9f485646be6e4","time":{"start":1680717371212,"stop":1680717383152,"duration":11940},"status":"failed","statusMessage":"AssertionError: assert (False)\n +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"3dbe98521b39c8ce60ccdba3a168615c\", element=\"9fa93601-6813-4845-ac85-0f114b6128a5\")>>()\n +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"3dbe98521b39c8ce60ccdba3a168615c\", element=\"9fa93601-6813-4845-ac85-0f114b6128a5\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"3dbe98521b39c8ce60ccdba3a168615c\", element=\"9fa93601-6813-4845-ac85-0f114b6128a5\")>.is_displayed","statusTrace":"self = <test_conduit.TestConduit object at 0x7f7729f419c0>\n\n    def test_registration_page(self):\n    \n        # Beolvasás fileból\n        self.read_file('signup_credentials.csv')\n    \n        # Regisztráció próbálkozások\n        for attempt in file_list:\n            Signup_btn = self.browser.find_element(By.XPATH, \"//a[@href='#/register']\")\n            Signup_btn.click()\n    \n            Username_input = self.browser.find_element(By.XPATH, \"//input[@placeholder='Username']\")\n            Email_input = self.browser.find_element(By.XPATH, \"//input[@placeholder='Email']\")\n            Password_input = self.browser.find_element(By.XPATH, \"//input[@placeholder='Password']\")\n            Signup_reg_btn = self.browser.find_element(By.XPATH, \"//button[contains(text(), 'Sign up')]\")\n            Have_an_account_btn = self.browser.find_element(By.XPATH, \"//a[contains(text(), 'Have an account?')]\")\n            Home_btn = self.browser.find_element(By.XPATH, \"//a[contains(text(), 'Home')]\")\n            Conduit_btn = self.browser.find_element(By.XPATH, \"//a[contains(text(), 'conduit')]\")\n            Login_btn = self.browser.find_element(By.XPATH, \"//a[@href='#/login']\")\n            Signup_btn = self.browser.find_element(By.XPATH, \"//a[@href='#/register']\")\n    \n            assert Password_input.get_attribute('type') == \"password\"\n            assert Signup_reg_btn.is_displayed()\n    \n            Username_input.send_keys(attempt[0])\n            Email_input.send_keys(attempt[1])\n            Password_input.send_keys(attempt[2])\n            Signup_reg_btn.click()\n    \n            success_icon = self.browser.find_element(By.XPATH, \"//div[@class='swal-icon--success__ring']\")\n            popup_ok_btn = self.browser.find_element(By.XPATH, \"//button[@class='swal-button swal-button--confirm']\")\n>           assert success_icon.is_displayed() and popup_ok_btn.is_displayed()\nE           assert (False)\nE            +  where False = <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"3dbe98521b39c8ce60ccdba3a168615c\", element=\"9fa93601-6813-4845-ac85-0f114b6128a5\")>>()\nE            +    where <bound method WebElement.is_displayed of <selenium.webdriver.remote.webelement.WebElement (session=\"3dbe98521b39c8ce60ccdba3a168615c\", element=\"9fa93601-6813-4845-ac85-0f114b6128a5\")>> = <selenium.webdriver.remote.webelement.WebElement (session=\"3dbe98521b39c8ce60ccdba3a168615c\", element=\"9fa93601-6813-4845-ac85-0f114b6128a5\")>.is_displayed\n\nvizsgaremek/Vizsgaremek_Python/test_conduit.py:141: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680717368962,"stop":1680717371211,"duration":2249},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680717383292,"stop":1680717384350,"duration":1058},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"vizsgaremek.Vizsgaremek_Python"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az646-86"},{"name":"thread","value":"3114-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"vizsgaremek.Vizsgaremek_Python.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"4f3f6f63eb0359cb.json","parameterValues":[]}